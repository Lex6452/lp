from pyrogram import Client, filters
from pyrogram.types import Message
from pyrogram.enums import ChatAction
from db.db_utils import add_fake_activity, remove_fake_activity, list_fake_activities
from utils.filters import (
    add_fake_voice_filter, remove_fake_voice_filter,
    add_fake_typing_filter, remove_fake_typing_filter,
    list_fake_voice_filter, list_fake_typing_filter
)
import asyncio
from typing import Dict

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á —Å–∏–º—É–ª—è—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
fake_activity_tasks: Dict[tuple, asyncio.Task] = {}

async def simulate_activity(client: Client, chat_id: int, action: ChatAction):
    """–¶–∏–∫–ª–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –≤ —á–∞—Ç, –ø–æ–∫–∞ –∑–∞–¥–∞—á–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞."""
    try:
        while True:
            await client.send_chat_action(chat_id, action)
            await asyncio.sleep(5)  # Telegram —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    except asyncio.CancelledError:
        pass  # –ó–∞–¥–∞—á–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª
    except Exception as e:
        print(f"Error in simulate_activity: {e}")

async def start_fake_activity(client: Client, user_id: int, chat_id: int, activity_type: str, action: ChatAction, message: Message):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ—ë –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    try:
        if (user_id, chat_id, activity_type) in fake_activity_tasks:
            await message.edit(f"‚ùå {activity_type} —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")
            return

        if await add_fake_activity(user_id, chat_id, activity_type):
            task = asyncio.create_task(simulate_activity(client, chat_id, action))
            fake_activity_tasks[(user_id, chat_id, activity_type)] = task
            await message.edit(f"‚úÖ {activity_type} –≤–∫–ª—é—á–µ–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")
        else:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ {activity_type}!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def stop_fake_activity(client: Client, user_id: int, chat_id: int, activity_type: str, message: Message):
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —É–¥–∞–ª—è–µ—Ç –µ—ë –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    try:
        key = (user_id, chat_id, activity_type)
        if key not in fake_activity_tasks:
            await message.edit(f"‚ùå {activity_type} –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")
            return

        if await remove_fake_activity(user_id, chat_id, activity_type):
            task = fake_activity_tasks.pop(key)
            task.cancel()  # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É
            await message.edit(f"‚úÖ {activity_type} –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")
        else:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ {activity_type}!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def add_fake_voice_cmd(client: Client, message: Message):
    """–í–∫–ª—é—á–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    user_id = message.from_user.id
    chat_id = message.chat.id
    await start_fake_activity(client, user_id, chat_id, "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", ChatAction.RECORD_AUDIO, message)

async def remove_fake_voice_cmd(client: Client, message: Message):
    """–û—Ç–∫–ª—é—á–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    user_id = message.from_user.id
    chat_id = message.chat.id
    await stop_fake_activity(client, user_id, chat_id, "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", message)

async def add_fake_typing_cmd(client: Client, message: Message):
    """–í–∫–ª—é—á–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞."""
    user_id = message.from_user.id
    chat_id = message.chat.id
    await start_fake_activity(client, user_id, chat_id, "–ù–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞", ChatAction.TYPING, message)

async def remove_fake_typing_cmd(client: Client, message: Message):
    """–û—Ç–∫–ª—é—á–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞."""
    user_id = message.from_user.id
    chat_id = message.chat.id
    await stop_fake_activity(client, user_id, chat_id, "–ù–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞", message)

async def list_fake_voice_cmd(client: Client, message: Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    try:
        user_id = message.from_user.id
        activities = await list_fake_activities(user_id, "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        if not activities:
            await message.edit("üìÇ –ù–µ—Ç —á–∞—Ç–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è!")
        else:
            chat_list = []
            for i, activity in enumerate(activities, 1):
                chat_id = activity["chat_id"]
                try:
                    chat = await client.get_chat(chat_id)
                    chat_name = chat.title or chat.first_name or f"–ß–∞—Ç {chat_id}"
                except:
                    chat_name = f"–ß–∞—Ç {chat_id} (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"
                chat_list.append(f"{i}. {chat_name} (ID: {chat_id})")
            chat_text = "\n".join(chat_list)
            await message.edit(f"üìÇ –ß–∞—Ç—ã —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n{chat_text}\n\n–í—Å–µ–≥–æ: {len(activities)}")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def list_fake_typing_cmd(client: Client, message: Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞."""
    try:
        user_id = message.from_user.id
        activities = await list_fake_activities(user_id, "–ù–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞")
        if not activities:
            await message.edit("üìÇ –ù–µ—Ç —á–∞—Ç–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞!")
        else:
            chat_list = []
            for i, activity in enumerate(activities, 1):
                chat_id = activity["chat_id"]
                try:
                    chat = await client.get_chat(chat_id)
                    chat_name = chat.title or chat.first_name or f"–ß–∞—Ç {chat_id}"
                except:
                    chat_name = f"–ß–∞—Ç {chat_id} (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"
                chat_list.append(f"{i}. {chat_name} (ID: {chat_id})")
            chat_text = "\n".join(chat_list)
            await message.edit(f"üìÇ –ß–∞—Ç—ã —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞:\n\n{chat_text}\n\n–í—Å–µ–≥–æ: {len(activities)}")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

def register(app: Client):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."""
    app.on_message(filters.create(add_fake_voice_filter))(add_fake_voice_cmd)
    app.on_message(filters.create(remove_fake_voice_filter))(remove_fake_voice_cmd)
    app.on_message(filters.create(add_fake_typing_filter))(add_fake_typing_cmd)
    app.on_message(filters.create(remove_fake_typing_filter))(remove_fake_typing_cmd)
    app.on_message(filters.create(list_fake_voice_filter))(list_fake_voice_cmd)
    app.on_message(filters.create(list_fake_typing_filter))(list_fake_typing_cmd)