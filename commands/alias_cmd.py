import logging
from pyrogram import Client, filters
from pyrogram.types import Message
from pyrogram.enums import ParseMode
from db.db_utils import alias_exists, save_alias, delete_alias, list_aliases, get_alias_command, get_user_prefix
from utils.filters import add_alias_filter, delete_alias_filter, list_aliases_filter, alias_trigger_filter
from commands.voice_cmd import get_voice_message_cmd
from commands.template_cmd import get_template_cmd
from commands.animation_cmd import get_animation_cmd
from commands.video_note_cmd import get_video_note_cmd

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
RESERVED_COMMANDS = {
    "type", "hack", "speedtest", "+—à–∞–±", "—à–∞–±", "-—à–∞–±", "—à–∞–±—ã", "–¥–¥", "–¥–¥-",
    "+–≥—Å", "–≥—Å", "-–≥—Å", "–≥—Å—ã", "speed", "+speed", "-speed", "+–∞–Ω–∏–º–∫–∞", "–∞–Ω–∏–º–∫–∞",
    "-–∞–Ω–∏–º–∫–∞", "–∞–Ω–∏–º–∫–∏", "+–∫—Ä—É–∂–æ—á–µ–∫", "–∫—Ä—É–∂–æ—á–µ–∫", "-–∫—Ä—É–∂–æ—á–µ–∫", "–∫—Ä—É–∂–æ—á–∫–∏", "+–≥—Å—Ñ",
    "-–≥—Å—Ñ", "–≥—Å—Ñ", "+—Å–º—Å", "-—Å–º—Å", "—Å–º—Å", "+–æ–Ω–ª–∞–π–Ω", "-–æ–Ω–ª–∞–π–Ω", "–æ–Ω–ª–∞–π–Ω", "–ø—Ä–µ—Ñ",
    "–ø—Ä–µ—Ñ–∏–∫—Å", "–ø—Ä–æ—Ñ–∏–ª—å", "+–∞–ª–∏–∞—Å", "-–∞–ª–∏–∞—Å", "–∞–ª–∏–∞—Å—ã", "help"
}

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–ª–∏–∞—Å–æ–≤
SUPPORTED_COMMANDS = {"–≥—Å", "—à–∞–±", "–∞–Ω–∏–º–∫–∞", "–∫—Ä—É–∂–æ—á–µ–∫"}

async def add_alias_cmd(client: Client, message: Message):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π –∞–ª–∏–∞—Å."""
    try:
        parts = message.text.split(maxsplit=3)
        if len(parts) < 4:
            await message.edit("‚ùå –§–æ—Ä–º–∞—Ç: <–ø—Ä–µ—Ñ–∏–∫—Å>+–∞–ª–∏–∞—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ> <–∫–æ–º–∞–Ω–¥–∞>")
            return

        alias_name = parts[2].strip()
        command = parts[3].strip()
        user_id = message.from_user.id
        prefix = await get_user_prefix(user_id)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∏ —Å–∏–º–≤–æ–ª–æ–≤ –∞–ª–∏–∞—Å–∞
        if not (1 <= len(alias_name) <= 50):
            await message.edit("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤!")
            return
        if any(ord(char) < 32 for char in alias_name):
            await message.edit("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã!")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
        if alias_name.lower() in RESERVED_COMMANDS:
            await message.edit("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–æ—Ç–∞!")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞
        if not command.startswith(f"{prefix} "):
            await message.edit(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å '{prefix} <–∫–æ–º–∞–Ω–¥–∞> <–∏–º—è>'!")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ ‚Äî —ç—Ç–æ –æ–¥–Ω–∞ –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö
        cmd_parts = command.split()
        if len(cmd_parts) < 3:
            await message.edit(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –≤–∫–ª—é—á–∞—Ç—å –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: '{prefix} <–∫–æ–º–∞–Ω–¥–∞> <–∏–º—è>'!")
            return
        cmd_name = cmd_parts[1].lower()
        if cmd_name not in SUPPORTED_COMMANDS:
            supported_list = ", ".join(f"'{prefix} {cmd}'" for cmd in SUPPORTED_COMMANDS)
            await message.edit(f"‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã: {supported_list}")
            return

        if await alias_exists(user_id, alias_name):
            await message.edit(f"‚ùå –ê–ª–∏–∞—Å '{alias_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return

        if await save_alias(user_id, alias_name, command):
            await message.edit(f"‚úÖ –ê–ª–∏–∞—Å '{alias_name}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã: {command}")
            logger.info(f"–ê–ª–∏–∞—Å '{alias_name}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {command}")
        else:
            await message.edit("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–ª–∏–∞—Å–∞!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–ª–∏–∞—Å–∞: {e}")
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def delete_alias_cmd(client: Client, message: Message):
    """–£–¥–∞–ª—è–µ—Ç –∞–ª–∏–∞—Å."""
    try:
        parts = message.text.split(maxsplit=2)
        if len(parts) < 3:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <–ø—Ä–µ—Ñ–∏–∫—Å>-–∞–ª–∏–∞—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ>")
            return

        alias_name = parts[2].strip()
        user_id = message.from_user.id

        if await delete_alias(user_id, alias_name):
            await message.edit(f"üóëÔ∏è –ê–ª–∏–∞—Å '{alias_name}' —É–¥–∞–ª—ë–Ω!")
            logger.info(f"–ê–ª–∏–∞—Å '{alias_name}' —É–¥–∞–ª—ë–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        else:
            await message.edit(f"‚ùå –ê–ª–∏–∞—Å '{alias_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–ª–∏–∞—Å–∞: {e}")
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def list_aliases_cmd(client: Client, message: Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∞–ª–∏–∞—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    try:
        user_id = message.from_user.id
        aliases = await list_aliases(user_id)

        if not aliases:
            await message.edit("üìÇ –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞–ª–∏–∞—Å–æ–≤!")
        else:
            aliases_list = "\n".join(
                f"{i+1}. <code>{alias['name']}</code> ‚Üí {alias['command']}"
                for i, alias in enumerate(aliases)
            )
            await message.edit(
                f"üìÇ –í–∞—à–∏ –∞–ª–∏–∞—Å—ã:\n\n{aliases_list}\n\n–í—Å–µ–≥–æ: {len(aliases)}",
                parse_mode=ParseMode.HTML
            )
            logger.info(f"–°–ø–∏—Å–æ–∫ –∞–ª–∏–∞—Å–æ–≤ –≤—ã–≤–µ–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–∞ –∞–ª–∏–∞—Å–æ–≤: {e}")
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def trigger_alias_cmd(client: Client, message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–∑–æ–≤ –∞–ª–∏–∞—Å–∞."""
    try:
        alias_name = message.text.strip()
        user_id = message.from_user.id
        command = await get_alias_command(user_id, alias_name)

        if not command:
            return  # –ù–µ –∞–ª–∏–∞—Å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–ª–∏–∞—Å–æ–º
        await message.delete()

        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É
        cmd_parts = command.split()
        if len(cmd_parts) < 3:
            await client.send_message(
                chat_id=message.chat.id,
                text=f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã –≤ –∞–ª–∏–∞—Å–µ: {command}"
            )
            return

        cmd_name = cmd_parts[1].lower()
        # –í—ã–±–∏—Ä–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        if cmd_name == "–≥—Å":
            fake_message = message
            fake_message.text = command
            fake_message.from_user.id = user_id
            await get_voice_message_cmd(client, fake_message)
        elif cmd_name == "—à–∞–±":
            fake_message = message
            fake_message.text = command
            fake_message.from_user.id = user_id
            await get_template_cmd(client, fake_message)
        elif cmd_name == "–∞–Ω–∏–º–∫–∞":
            fake_message = message
            fake_message.text = command
            fake_message.from_user.id = user_id
            await get_animation_cmd(client, fake_message)
        elif cmd_name == "–∫—Ä—É–∂–æ—á–µ–∫":
            fake_message = message
            fake_message.text = command
            fake_message.from_user.id = user_id
            await get_video_note_cmd(client, fake_message)
        else:
            supported_list = ", ".join(f"'{cmd}'" for cmd in SUPPORTED_COMMANDS)
            await client.send_message(
                chat_id=message.chat.id,
                text=f"‚ùå –ö–æ–º–∞–Ω–¥–∞ '{cmd_name}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –∞–ª–∏–∞—Å–∞—Ö. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: {supported_list}"
            )
            return

        logger.info(f"–ê–ª–∏–∞—Å '{alias_name}' –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É '{command}' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∞–ª–∏–∞—Å–∞: {e}")
        await client.send_message(
            chat_id=message.chat.id,
            text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∞–ª–∏–∞—Å–∞: {str(e)}"
        )

def register(app: Client):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥."""
    app.on_message(filters.create(add_alias_filter))(add_alias_cmd)
    app.on_message(filters.create(delete_alias_filter))(delete_alias_cmd)
    app.on_message(filters.create(list_aliases_filter))(list_aliases_cmd)
    app.on_message(filters.create(alias_trigger_filter))(trigger_alias_cmd)