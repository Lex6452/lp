from pyrogram import Client, filters
from pyrogram.types import Message
from db.db_utils import list_speed_servers, get_speed_server, remove_speed_server, add_speed_server
from utils.speedtest_utils import run_remote_speedtest, format_speedtest_results, mask_ip
import asyncio
from urllib.parse import urlparse
import re

def extract_masked_ip_from_url(url: str) -> str:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç IP –∏–∑ URL –∏ –º–∞—Å–∫–∏—Ä—É–µ—Ç –µ–≥–æ, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ä—Ç."""
    try:
        parsed = urlparse(url)
        hostname = parsed.hostname
        port = parsed.port if parsed.port else ""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ hostname IP-–∞–¥—Ä–µ—Å–æ–º
        if re.match(r"^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$", hostname):
            masked_ip = mask_ip(hostname)
            return f"{parsed.scheme}://{masked_ip}{':' + str(port) if port else ''}"
        return url  # –ï—Å–ª–∏ –Ω–µ IP, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π URL
    except Exception:
        return url  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π URL

async def list_speed_servers_cmd(client: Client, message: Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ IP."""
    try:
        servers = await list_speed_servers()
        if not servers:
            await message.edit("üìÇ –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤!")
        else:
            servers_list = "\n".join(
                f"{server['id']}. {server['name']} ({extract_masked_ip_from_url(server['url'])})"
                for server in servers
            )
            await message.edit(f"üìÇ –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤:\n\n{servers_list}\n\n–í—Å–µ–≥–æ: {len(servers)}")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def speedtest_server_cmd(client: Client, message: Message):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø–æ –µ–≥–æ ID."""
    try:
        if len(message.command) < 2:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ ID —Å–µ—Ä–≤–µ—Ä–∞: `.speed 1`")
            return

        server_id = message.text.split()[1]
        try:
            server_id = int(server_id)
        except ValueError:
            await message.edit("‚ùå ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
            return

        server = await get_speed_server(server_id)
        if not server:
            await message.edit(f"‚ùå –°–µ—Ä–≤–µ—Ä —Å ID {server_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        msg = await message.edit(f"‚è≥ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {server['name']}...")
        data = await run_remote_speedtest(server['url'])
        
        if not data:
            await msg.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {server['name']}")
            return

        result_text = format_speedtest_results(data, server['name'])
        await msg.edit(result_text)
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def remove_speed_server_cmd(client: Client, message: Message):
    """–£–¥–∞–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ ID."""
    try:
        if len(message.command) < 2:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ ID —Å–µ—Ä–≤–µ—Ä–∞: `.-speed 1`")
            return

        server_id = message.text.split()[1]
        try:
            server_id = int(server_id)
        except ValueError:
            await message.edit("‚ùå ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
            return

        server = await get_speed_server(server_id)
        if not server:
            await message.edit(f"‚ùå –°–µ—Ä–≤–µ—Ä —Å ID {server_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        if await remove_speed_server(server['name']):
            await message.edit(f"üóëÔ∏è –°–µ—Ä–≤–µ—Ä '{server['name']}' —É–¥–∞–ª—ë–Ω!")
        else:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ '{server['name']}'!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def add_speed_server_cmd(client: Client, message: Message):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏–º–µ–Ω–∏ –∏ URL."""
    try:
        if len(message.command) < 3:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ URL —Å–µ—Ä–≤–µ—Ä–∞: `.+speed –∏–º—è http://example.com`")
            return

        parts = message.text.split(maxsplit=2)
        name, url = parts[1], parts[2]

        if await add_speed_server(name, url):
            await message.edit(f"‚úÖ –°–µ—Ä–≤–µ—Ä '{name}' –¥–æ–±–∞–≤–ª–µ–Ω!")
        else:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ '{name}'!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

def register(app: Client):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏."""
    app.on_message(filters.command("speed", prefixes=".") & filters.me & ~filters.regex(r"^\.speed\s+\d+$"))(list_speed_servers_cmd)
    app.on_message(filters.command("speed", prefixes=".") & filters.me & filters.regex(r"^\.speed\s+\d+$"))(speedtest_server_cmd)
    app.on_message(filters.command("-speed", prefixes=".") & filters.me)(remove_speed_server_cmd)
    app.on_message(filters.command("+speed", prefixes=".") & filters.me)(add_speed_server_cmd)