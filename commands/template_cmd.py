from pyrogram import Client, filters
from pyrogram.types import Message
from db.db_utils import template_exists, save_template, get_template, delete_template, list_templates
from utils.filters import template_filter, simple_cmd_filter

async def save_template_cmd(client: Client, message: Message):
    try:
        if not message.reply_to_message or not message.reply_to_message.text:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        template_name = message.text.split(maxsplit=1)[1].strip()
        user_id = message.from_user.id
        template_text = message.reply_to_message.text

        if await template_exists(user_id, template_name):
            await message.edit(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return

        if await save_template(user_id, template_name, template_text):
            await message.edit(f"‚úÖ –®–∞–±–ª–æ–Ω '{template_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        else:
            await message.edit("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def get_template_cmd(client: Client, message: Message):
    try:
        template_name = message.text.split(maxsplit=1)[1].strip()
        user_id = message.from_user.id
        template_text = await get_template(user_id, template_name)

        if template_text:
            await message.edit(template_text)
        else:
            await message.edit(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def delete_template_cmd(client: Client, message: Message):
    try:
        template_name = message.text.split(maxsplit=1)[1].strip()
        user_id = message.from_user.id

        if await delete_template(user_id, template_name):
            await message.edit(f"üóëÔ∏è –®–∞–±–ª–æ–Ω '{template_name}' —É–¥–∞–ª–µ–Ω!")
        else:
            await message.edit(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def list_templates_cmd(client: Client, message: Message):
    try:
        user_id = message.from_user.id
        templates = await list_templates(user_id)

        if not templates:
            await message.edit("üìÇ –£ –≤–∞—Å –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤!")
        else:
            templates_list = "\n".join(f"{i+1}. {name}" for i, name in enumerate(templates))
            await message.edit(f"üìÇ –í–∞—à–∏ —à–∞–±–ª–æ–Ω—ã:\n\n{templates_list}\n\n–í—Å–µ–≥–æ: {len(templates)}")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

def register(app: Client):
    app.on_message(template_filter("+—à–∞–±") & filters.me)(save_template_cmd)
    app.on_message(template_filter("—à–∞–±") & filters.me)(get_template_cmd)
    app.on_message(template_filter("-—à–∞–±") & filters.me)(delete_template_cmd)
    app.on_message(simple_cmd_filter("—à–∞–±—ã") & filters.me)(list_templates_cmd)