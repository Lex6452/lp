from pyrogram import Client, filters
from pyrogram.types import Message
from db.db_utils import template_exists, save_template, get_template, delete_template, list_templates, list_categories
from utils.filters import template_filter, simple_cmd_filter
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def save_template_cmd(client: Client, message: Message):
    try:
        if not message.reply_to_message or not message.reply_to_message.text:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        parts = message.text.split(maxsplit=2)
        if len(parts) < 3:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–º—è —à–∞–±–ª–æ–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <–ø—Ä–µ—Ñ–∏–∫—Å> +—à–∞–± –º–æ–π_—à–∞–±–ª–æ–Ω")
            return
        template_info = parts[2].strip().split("|", 1)
        template_name = template_info[0].strip()
        category = "–±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" if len(template_info) < 2 else template_info[1].strip()
        user_id = message.from_user.id
        template_text = message.reply_to_message.text

        if not template_name:
            await message.edit("‚ùå –ò–º—è —à–∞–±–ª–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return

        if await template_exists(user_id, template_name):
            await message.edit(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return

        if await save_template(user_id, template_name, template_text, category):
            await message.edit(f"‚úÖ –®–∞–±–ª–æ–Ω '{template_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'!")
        else:
            await message.edit("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")

async def get_template_cmd(client: Client, message: Message):
    try:
        parts = message.text.split(maxsplit=2)
        if len(parts) < 3:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–º—è —à–∞–±–ª–æ–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <–ø—Ä–µ—Ñ–∏–∫—Å> —à–∞–± –º–æ–π_—à–∞–±–ª–æ–Ω")
            return
        template_name = parts[2].strip()
        user_id = message.from_user.id
        result = await get_template(user_id, template_name)

        if result:
            template_text, _ = result  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            await message.edit(template_text)
        else:
            await message.edit(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")

async def delete_template_cmd(client: Client, message: Message):
    try:
        parts = message.text.split(maxsplit=2)
        if len(parts) < 3:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–º—è —à–∞–±–ª–æ–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <–ø—Ä–µ—Ñ–∏–∫—Å> -—à–∞–± –º–æ–π_—à–∞–±–ª–æ–Ω")
            return
        template_name = parts[2].strip()
        user_id = message.from_user.id

        if await delete_template(user_id, template_name):
            await message.edit(f"üóëÔ∏è –®–∞–±–ª–æ–Ω '{template_name}' —É–¥–∞–ª–µ–Ω!")
        else:
            await message.edit(f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")

async def list_templates_cmd(client: Client, message: Message):
    try:
        user_id = message.from_user.id
        parts = message.text.strip().split(maxsplit=2)  # <–ø—Ä–µ—Ñ–∏–∫—Å> <–∫–æ–º–∞–Ω–¥–∞> <–∞—Ä–≥—É–º–µ–Ω—Ç>
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {message.text}, parts={parts}, user_id={user_id}")

        # –ö–æ–º–∞–Ω–¥–∞ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: <–ø—Ä–µ—Ñ–∏–∫—Å> —à–∞–±—ã
        if len(parts) < 3 or not parts[2].strip():
            categories = await list_categories(user_id)
            if not categories:
                await message.edit("üìÇ –£ –≤–∞—Å –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —à–∞–±–ª–æ–Ω–æ–≤!")
            else:
                categories_list = "\n".join(f"- {cat} ({count})" for cat, count in categories)
                await message.edit(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤:\n\n{categories_list}")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç
        arg = parts[2].strip()

        # –ö–æ–º–∞–Ω–¥–∞ <–ø—Ä–µ—Ñ–∏–∫—Å> —à–∞–±—ã –≤—Å–µ
        if arg.lower() == "–≤—Å–µ":
            templates = await list_templates(user_id)
            if not templates:
                await message.edit("üìÇ –£ –≤–∞—Å –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤!")
            else:
                templates_list = "\n".join(f"- {name} | {category}" for name, category in templates)
                await message.edit(f"–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤:\n\n{templates_list}")
            return

        # –ö–æ–º–∞–Ω–¥–∞ <–ø—Ä–µ—Ñ–∏–∫—Å> —à–∞–±—ã <–∫–∞—Ç–µ–≥–æ—Ä–∏—è>
        category = arg
        templates = await list_templates(user_id, category)
        if not templates:
            await message.edit(f"üìÇ –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}' –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤!")
        else:
            templates_list = "\n".join(f"- {name}" for name, _ in templates)
            await message.edit(f"üìö –®–∞–±–ª–æ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}':\n\n{templates_list}")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
        logger.error(f"–û—à–∏–±–∫–∞ –≤ list_templates_cmd: {e}")

def register(app: Client):
    app.on_message(simple_cmd_filter("—à–∞–±—ã", ignore_case=True) & filters.me)(list_templates_cmd)
    app.on_message(template_filter("+—à–∞–±", ignore_case=True) & filters.me)(save_template_cmd)
    app.on_message(template_filter("—à–∞–±", ignore_case=True) & filters.me)(get_template_cmd)
    app.on_message(template_filter("-—à–∞–±", ignore_case=True) & filters.me)(delete_template_cmd)