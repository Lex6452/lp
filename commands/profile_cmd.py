import logging
from pyrogram import Client, filters
from pyrogram.types import Message
from db.db_utils import get_user_prefix, list_video_notes, list_voice_messages, list_templates
from pyrogram.enums import ParseMode

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def profile_cmd(client: Client, message: Message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± ID, –ø—Ä–µ—Ñ–∏–∫—Å–µ –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    try:
        user_id = message.from_user.id
        prefix = await get_user_prefix(user_id)
        video_notes = await list_video_notes(user_id)
        voice_messages = await list_voice_messages(user_id)
        templates = await list_templates(user_id)

        profile_text = (
            f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
            f"üÜî <b>User ID</b>: <code>{user_id}</code>\n"
            f"üî£ <b>–ü—Ä–µ—Ñ–∏–∫—Å</b>: {prefix}\n"
            f"üìπ <b>–í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–∫–æ–≤</b>: {len(video_notes)}\n"
            f"üéôÔ∏è <b>–ì–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π</b>: {len(voice_messages)}\n"
            f"üìù <b>–®–∞–±–ª–æ–Ω–æ–≤</b>: {len(templates)}"
        )

        await message.edit(profile_text, parse_mode=ParseMode.HTML)
        logger.info(f"–ü—Ä–æ—Ñ–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂—ë–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

def register(app: Client):
    app.on_message(filters.command("–ø—Ä–æ—Ñ–∏–ª—å", prefixes=".") & filters.me)(profile_cmd)