from pyrogram import Client, filters
from pyrogram.types import Message
import os
import unicodedata
import re
from db.db_utils import video_note_exists, save_video_note, delete_video_note, list_video_notes, get_video_note
from utils.filters import add_video_note_filter, delete_video_note_filter, get_video_note_filter, list_video_notes_filter

def normalize_filename(name: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞, —É–±–∏—Ä–∞—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã."""
    name = unicodedata.normalize('NFKD', name).encode('ASCII', 'ignore').decode('ascii')
    name = name.replace(' ', '_')
    name = re.sub(r'[^\w.]', '', name)
    name = re.sub(r'_+', '_', name)
    name = name.strip('_')
    return name or 'video_note'

async def add_video_note_cmd(client: Client, message: Message):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º."""
    try:
        if not message.reply_to_message or not message.reply_to_message.video_note:
            await message.edit("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫!")
            return

        video_note_name = message.text.split(maxsplit=2)[2].strip()
        user_id = message.from_user.id

        if not (1 <= len(video_note_name) <= 50):
            await message.edit("‚ùå –ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤")
            return

        if any(ord(char) < 32 for char in video_note_name):
            await message.edit("‚ùå –ò–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã")
            return

        if await video_note_exists(user_id, video_note_name):
            await message.edit(f"‚ùå –í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ '{video_note_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return

        save_dir = "video_notes"
        if not os.path.exists(save_dir):
            os.makedirs(save_dir)

        safe_name = normalize_filename(video_note_name)
        file_name = f"video_note_{user_id}_{safe_name}_{message.reply_to_message.id}.mp4"
        file_path = os.path.join(save_dir, file_name)

        if message.reply_to_message.video_note.file_size > 50 * 1024 * 1024:
            await message.edit("‚ùå –í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 50 –ú–ë)")
            return

        await client.download_media(message.reply_to_message.video_note.file_id, file_path)

        if await save_video_note(user_id, video_note_name, file_path):
            await message.edit(f"‚úÖ –í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ '{video_note_name}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
        else:
            await message.edit("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏!")
            if os.path.exists(file_path):
                os.remove(file_path)
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def delete_video_note_cmd(client: Client, message: Message):
    """–£–¥–∞–ª—è–µ—Ç –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ –ø–æ –∏–º–µ–Ω–∏."""
    try:
        video_note_name = message.text.split(maxsplit=2)[2].strip()
        user_id = message.from_user.id

        if await delete_video_note(user_id, video_note_name):
            await message.edit(f"üóëÔ∏è –í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ '{video_note_name}' —É–¥–∞–ª—ë–Ω!")
        else:
            await message.edit(f"‚ùå –í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ '{video_note_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def list_video_notes_cmd(client: Client, message: Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–∫–æ–≤."""
    try:
        user_id = message.from_user.id
        video_notes = await list_video_notes(user_id)

        if not video_notes:
            await message.edit("üìÇ –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–∫–æ–≤!")
        else:
            video_notes_list = "\n".join(f"{i+1}. {video_note['name']}" for i, video_note in enumerate(video_notes))
            await message.edit(f"üìÇ –í–∞—à–∏ –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–∫–∏:\n\n{video_notes_list}\n\n–í—Å–µ–≥–æ: {len(video_notes)}")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

async def get_video_note_cmd(client: Client, message: Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ –ø–æ –∏–º–µ–Ω–∏."""
    try:
        video_note_name = message.text.split(maxsplit=2)[2].strip()
        user_id = message.from_user.id
        file_path = await get_video_note(user_id, video_note_name)

        if file_path and os.path.exists(file_path):
            await message.delete()
            await client.send_video_note(message.chat.id, file_path)
        else:
            await message.edit(f"‚ùå –í–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–µ–∫ '{video_note_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

def register(app: Client):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ—á–∫–∞–º–∏."""
    app.on_message(filters.create(add_video_note_filter))(add_video_note_cmd)
    app.on_message(filters.create(delete_video_note_filter))(delete_video_note_cmd)
    app.on_message(filters.create(list_video_notes_filter))(list_video_notes_cmd)
    app.on_message(filters.create(get_video_note_filter))(get_video_note_cmd)