from pyrogram import Client, filters
from pyrogram.types import Message
import random

# –§–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã .–≤—ã–±–µ—Ä–∏
def choose_filter(_: Client, __, message: Message):
    return (
        message.text is not None and
        message.text.startswith('.–≤—ã–±–µ—Ä–∏') and
        len(message.text.split()) > 1 and
        message.from_user and
        message.from_user.is_self
    )

async def choose_cmd(client: Client, message: Message):
    """–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤–æ–º '–∏–ª–∏'."""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ .–≤—ã–±–µ—Ä–∏
        text = message.text[7:].strip()  # –£–±–∏—Ä–∞–µ–º '.–≤—ã–±–µ—Ä–∏' –∏ –ø—Ä–æ–±–µ–ª—ã
        if not text:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–æ–º '–∏–ª–∏'. –ü—Ä–∏–º–µ—Ä: `.–≤—ã–±–µ—Ä–∏ —á–∞–π –∏–ª–∏ –∫–æ—Ñ–µ`")
            return

        # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ —Å–ª–æ–≤—É '–∏–ª–∏' (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä)
        variants = [v.strip() for v in text.split(' –∏–ª–∏ ') if v.strip()]
        if len(variants) < 2:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤–æ–º '–∏–ª–∏'. –ü—Ä–∏–º–µ—Ä: `.–≤—ã–±–µ—Ä–∏ —á–∞–π –∏–ª–∏ –∫–æ—Ñ–µ`")
            return

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        chosen = random.choice(variants)
        await message.edit(f"üé≤ –í—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç: **{chosen}**")

    except Exception as e:
        await message.edit(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

def register(app: Client):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã .–≤—ã–±–µ—Ä–∏."""
    app.on_message(filters.create(choose_filter))(choose_cmd)